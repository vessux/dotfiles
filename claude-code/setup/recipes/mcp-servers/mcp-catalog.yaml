# MCP Server Catalog
# Available Model Context Protocol servers for Claude Code

mcp_servers:
  sequential-thinking:
    name: "Sequential Thinking"
    description: "Enhanced reasoning for complex problems and multi-step tasks"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-sequential-thinking"]
    env: {}
    
  context7:
    name: "Context7"
    description: "External context and knowledge integration"
    type: "sse"
    url: "https://mcp.context7.com/sse"
    
  puppeteer:
    name: "Puppeteer"
    description: "Browser automation for web scraping and testing"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-puppeteer"]
    env: {}
    
  postgres:
    name: "PostgreSQL"
    description: "Query and manage PostgreSQL databases"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-postgres"]
    env:
      POSTGRES_CONNECTION_STRING: "postgresql://user:password@localhost/dbname"
    
  github:
    name: "GitHub"
    description: "GitHub API integration for repos, issues, and PRs"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-github"]
    env:
      GITHUB_TOKEN: "your-github-token"
    
  slack:
    name: "Slack"
    description: "Read and analyze Slack messages and channels"
    type: "stdio"  
    command: "npx"
    args: ["@modelcontextprotocol/server-slack"]
    env:
      SLACK_TOKEN: "your-slack-token"
    
  memory:
    name: "Memory"
    description: "Persistent memory and knowledge graph for conversations"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-memory"]
    env: {}
    
  fetch:
    name: "Fetch"
    description: "Make HTTP requests and fetch web content"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-fetch"]
    env: {}
    
  time:
    name: "Time"
    description: "Time and date utilities, timezone conversions"
    type: "stdio"
    command: "npx"
    args: ["@modelcontextprotocol/server-time"]
    env: {}