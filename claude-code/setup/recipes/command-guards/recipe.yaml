recipe:
  name: "Command Guard Hooks"
  description: "Install safety hooks to prevent dangerous commands"

variables:
  scope:
    prompt: "Install guards for this project or globally?"
    type: "choice"
    choices:
      - label: "This project only"
        value: "project"
      - label: "All projects (global)"
        value: "global"
    default: "project"
    
  selected_guards:
    prompt: "Which command guards would you like to enable?"
    type: "multi_choice"
    choices_from:
      file: "${recipe_dir}/guards-catalog.yaml"
      path: "guards"
      id_field: "_key"
      label_field: "name"
      description_field: "description"
      defaults: ["dangerous_rm", "force_push", "tui_apps", "env_file_commits"]

steps:
  - name: "Check existing guard script"
    type: "check_file"
    config:
      path: "${scope == 'project' ? project_root + '/.claude/hooks/command-guard.sh' : setup_dir + '/../hooks/command-guard.sh'}"
      if_exists: "ask_backup"

  - name: "Create hooks directory"
    type: "ensure_directory"
    config:
      path: "${scope == 'project' ? project_root + '/.claude/hooks' : setup_dir + '/../hooks'}"

  - name: "Generate command guard script"
    type: "run_command"
    config:
      command: "${recipe_dir}/helpers/generate-guard-script.sh"
      args: [
        "${recipe_dir}/guards-catalog.yaml",
        "${selected_guards}",
        "${scope == 'project' ? project_root + '/.claude/hooks/command-guard.sh' : setup_dir + '/../hooks/command-guard.sh'}"
      ]
      working_dir: "${recipe_dir}"

  - name: "Configure as hook"
    type: "run_command"
    config:
      command: "${recipe_dir}/helpers/configure-hook.sh"
      args: [
        "${scope == 'project' ? '.claude/hooks/command-guard.sh' : setup_dir + '/../hooks/command-guard.sh'}",
        "${scope == 'project' ? project_root + '/.claude/settings.json' : setup_dir + '/../settings.json'}"
      ]
      working_dir: "${recipe_dir}"

post_setup:
  message: |
    âœ… Command guards configured!
    
    Scope: ${scope}
    Location: ${scope == 'project' ? project_root + '/.claude/hooks' : setup_dir + '/../hooks'}
    
    Enabled guards:
    ${selected_guards}
    
    To customize rules, edit the command-guard.sh file.